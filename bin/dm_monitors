#!/bin/sh
#
# Dmenu for editing configs 
#
# Requires:
#   + rofi: need to have rofi installed
# 
# Author:   mitschix (is181803@fhstp.ac.at)
# Created:  20191007
#
#
# Last Updated: 20191007 - mitschix
#

rofi_cmd="rofi -dmenu -location 2 -lines 3 -theme Monokai -p "

# copied from lukesmith.xyz

twoscreen() { # If multi-monitor is selected and there are two screens.

    mirror=$(printf "no\\nyes" |  "Mirror displays?")
    # Mirror displays using native resolution of external display and a scaled
    # version for the internal display
    if [ "$mirror" = "yes" ]; then
        external=$(echo "$screens" | $rofi_cmd "Optimize resolution for")
        internal=$(echo "$screens" | grep -v "$external")

        res_external=$(xrandr --query | sed -n "/^$external/,/\+/p" | \
            tail -n 1 | awk '{print $1}')
        res_internal=$(xrandr --query | sed -n "/^$internal/,/\+/p" | \
            tail -n 1 | awk '{print $1}')

        res_ext_x=$(echo $res_external | sed 's/x.*//')
        res_ext_y=$(echo $res_external | sed 's/.*x//')
        res_int_x=$(echo $res_internal | sed 's/x.*//')
        res_int_y=$(echo $res_internal | sed 's/.*x//')

        scale_x=$(echo "$res_ext_x / $res_int_x" | bc -l)
        scale_y=$(echo "$res_ext_y / $res_int_y" | bc -l)

        xrandr --output "$external" --auto --scale 1.0x1.0 \
            --output "$internal" --auto --same-as "$external" \
            --scale "$scale_x"x"$scale_y"
    else

        primary=$(echo "$screens" | $rofi_cmd "Select primary display")
        secondary=$(echo "$screens" | grep -v "$primary")
        direction=$(printf "left-of\\nright-of\\nabove\\nbelow" | $rofi_cmd "What side of $primary should $secondary be on?")
        xrandr --output "$primary" --auto --scale 1.0x1.0 --output "$secondary" --"$direction" "$primary" --auto --scale 1.0x1.0
    fi
    }

morescreen() { # If multi-monitor is selected and there are more than two screens.
	primary=$(echo "$screens" | $rofi_cmd "Select primary display")
	secondary=$(echo "$screens" | grep -v "$primary" | $rofi_cmd "Select secondary display")
	direction=$(printf "left\\nright" | $rofi_cmd "What side of $primary should $secondary be on?")
	tertiary=$(echo "$screens" | grep -v "$primary" | grep -v "$secondary" | $rofi_cmd "Select third display")
	xrandr --output "$primary" --auto --output "$secondary" --"$direction"-of "$primary" --auto --output "$tertiary" --"$(printf "left\\nright" | grep -v "$direction")"-of "$primary" --auto
	}

multimon() { # Multi-monitor handler.
	case "$(echo "$screens" | wc -l)" in
		1) xrandr $(echo "$allposs" | grep -v "$screens" | awk '{print "--output", $1, "--off"}' | tr '\n' ' ') ;;
		2) twoscreen ;;
		*) morescreen ;;
	esac ;}

# Get all possible displays
allposs=$(xrandr -q | grep "connected")

# Get all connected screens.
screens=$(echo "$allposs" | grep " connected" | awk '{print $1}')

# Get user choice including multi-monitor and manual selection:
chosen=$(printf "%s\\nmulti-monitor" "$screens" | $rofi_cmd "Select display arangement") &&
case "$chosen" in
	"multi-monitor") multimon ;;
	*) xrandr --output "$chosen" --auto --scale 1.0x1.0 $(echo "$allposs" | grep -v "$chosen" | awk '{print "--output", $1, "--off"}' | tr '\n' ' ') ;;
esac
